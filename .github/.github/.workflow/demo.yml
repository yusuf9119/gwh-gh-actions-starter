# Simple workflow for deploying static content to GitHub Pages (test) and Vercel (prod)
name: Deploy to Environments

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Test environment: Deploy to GitHub Pages
  deploy_to_github_pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}src
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3

  # Production environment: Deploy to Vercel
  deploy_to_vercel:
    needs: deploy_to_github_pages  # Make deploy_to_vercel depend on deploy_to_github_pages
    environment:
      name: vercel-prod
      url: ${{ steps.vercel.outputs.zeit_url }}
    runs-on: ubuntu-latest

    steps:
        - uses: actions/checkout@v2
        - name: Install Vercel CLI
          run: npm install --global vercel@latest
        - name: Pull Vercel Environment Information
          run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        - name: Build Project Artifacts
          run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        - name: Deploy Project Artifacts to Vercel
          run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}